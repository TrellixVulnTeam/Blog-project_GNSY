# """
# Django settings for djangol1 project.
#
# Generated by 'django-admin startproject' using Django 3.2.
#
# For more information on this file, see
# https://docs.djangoproject.com/en/3.2/topics/settings/
#
# For the full list of settings and their values, see
# https://docs.djangoproject.com/en/3.2/ref/settings/
# """
# import os
# from pathlib import Path
#
# # Build paths inside the project like this: BASE_DIR / 'subdir'.
# BASE_DIR = Path(__file__).resolve().parent.parent
#
# # Quick-start development settings - unsuitable for production
# # See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/
#
# # SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = 'django-insecure-or2o0*y-#ic%ypp*t!7$))ysngm+r!+i$!y&l-*i56nd=%w49h'
#
# # SECURITY WARNING: don't run with debug turned on in production!
# DEBUG = False
#
# ALLOWED_HOSTS = ['127.0.0.1', 'localhost']
#
# # Application definition
#
# INSTALLED_APPS = [
#     'django.contrib.admin',
#     'django.contrib.auth',
#     'django.contrib.contenttypes',
#     'django.contrib.sessions',
#     'django.contrib.messages',
#     'django.contrib.staticfiles',
#     'django.contrib.humanize',
#     'rest_framework',
#     'widget_tweaks',
#     'blog',
#     'users',
#     'inventory',
#     'store',
#     'debug_toolbar',
# ]
#
# MIDDLEWARE = [
#     'debug_toolbar.middleware.DebugToolbarMiddleware',
#     'django.middleware.security.SecurityMiddleware',
#     'django.contrib.sessions.middleware.SessionMiddleware',
#     'django.middleware.locale.LocaleMiddleware',
#     'django.middleware.common.CommonMiddleware',
#     'django.middleware.csrf.CsrfViewMiddleware',
#     'django.contrib.auth.middleware.AuthenticationMiddleware',
#     'django.contrib.messages.middleware.MessageMiddleware',
#     'django.middleware.clickjacking.XFrameOptionsMiddleware',
# ]
#
# INTERNAL_IPS = [
#     '127.0.0.1',
# ]
#
# ROOT_URLCONF = 'djangol1.urls'
#
# TEMPLATES = [
#     {
#         'BACKEND': 'django.template.backends.django.DjangoTemplates',
#         'DIRS': [],
#         'APP_DIRS': True,
#         'OPTIONS': {
#             'context_processors': [
#                 'django.template.context_processors.debug',
#                 'django.template.context_processors.request',
#                 'django.contrib.auth.context_processors.auth',
#                 'django.contrib.messages.context_processors.messages',
#                 'blog.context_processors.shared_context'
#             ],
#         },
#     },
# ]
#
# WSGI_APPLICATION = 'djangol1.wsgi.application'
#
# # Database
# # https://docs.djangoproject.com/en/3.2/ref/settings/#databases
#
# DATABASES = {
#     'default': {
#         # 'ENGINE': 'django.db.backends.sqlite3',
#         # 'NAME': BASE_DIR / 'db.sqlite3',
#         'ENGINE': 'django.db.backends.postgresql',
#         'NAME': 'maktab_blog',
#         'USER': 'usr_blog',
#         'PASSWORD': '123456',
#         'HOST': 'localhost',
#         'PORT': '5432',
#     }
# }
#
# # Password validation
# # https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators
#
# AUTH_PASSWORD_VALIDATORS = [
#     {
#         'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
#     },
# ]
#
# # Internationalization
# # https://docs.djangoproject.com/en/3.2/topics/i18n/
#
# LANGUAGE_CODE = 'fa-ir'
# # LANGUAGE_CODE = 'en-us'
#
# TIME_ZONE = 'UTC'
#
# USE_I18N = True
#
# USE_L10N = True
#
# USE_TZ = True
#
# # Static files (CSS, JavaScript, Images)
# # https://docs.djangoproject.com/en/3.2/howto/static-files/
#
# STATIC_URL = '/static/'
# STATIC_ROOT = BASE_DIR / 'static'
#
# MEDIA_URL = '/uploads/'
# MEDIA_ROOT = BASE_DIR / 'uploads'
#
# # Default primary key field type
# # https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field
#
# DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
#
# # My Login url
# LOGIN_URL = 'users:login'
#
# CACHES = {
#     'default': {
#         'BACKEND': 'django.core.cache.backends.memcached.PyMemcacheCache',
#         'LOCATION': '127.0.0.1:11211'
#     }
# }
#
# SESSION_ENGINE = "django.contrib.sessions.backends.cache"
#
# LOGGING = {
#     'version': 1,
#     'disable_existing_loggers': False,
#     'formatters': {
#         # Key name is defined by us
#         'verbose': {
#             # These keys are defined by python/django
#             # There are a couple of pre-defined palce-holders
#             'format': '{levelname} {asctime} {module} {process:d} {thread:d} {message}',
#             # 'format': '%(levelname)s %(asctime)s %(module)s %(process)d %(thread)d %(message)s'
#             'style': '{',
#         },
#         'simple': {
#             'format': '{levelname} {asctime} {message}',
#             'style': '{',
#         },
#     },
#     'filters': {
#         'required_debug_true': {
#             '()': 'django.utils.log.RequireDebugTrue',
#         }
#     },
#     'handlers': {
#         'console': {
#             'class': 'logging.StreamHandler',
#             'filters': ['required_debug_true'],
#         },
#         'file_store': {
#             'class': 'logging.handlers.RotatingFileHandler',
#             'filename': os.path.join(BASE_DIR, 'logs', 'store.log'),
#             'formatter': 'simple'
#         },
#         'file_users': {
#             'class': 'logging.handlers.RotatingFileHandler',
#             'filename': os.path.join(BASE_DIR, 'logs', 'users.log'),
#         },
#         'mail_admins': {
#             'level': 'INFO',
#             'class': 'django.utils.log.AdminEmailHandler',
#         }
#     },
#     # Loggers
#     'root': {
#         'handlers': ['console'],
#         'level': 'INFO',
#     },
#     'loggers': {
#         'store': {
#             'handlers': ['file_store', 'console', 'mail_admins'],
#             'level': 'INFO',
#         },
#         'users': {
#             'handlers': ['file_users'],
#             'level': 'INFO',
#         },
#     }
# }
#
# # LOGGING = {
# #     'version': 1,
# #     'disable_existing_loggers': False,
# #     'formatters': {
# #         # Key name is defined by us
# #         'verbose': {
# #             # These keys are defined by python/django
# #             # There are a couple of pre-defined palce-holders
# #             'format': '{levelname} {asctime} {module} {process:d} {thread:d} {message}',
# #             # 'format': '%(levelname)s %(asctime)s %(module)s %(process)d %(thread)d %(message)s'
# #             'style': '{',
# #         },
# #         'simple': {
# #             'format': '{levelname} {asctime} {message}',
# #             'style': '{',
# #         },
# #     },
# #     'filters': {
# #         'required_debug_true': {
# #             '()': 'django.utils.log.RequireDebugTrue',
# #         }
# #     },
# #     'handlers': {
# #         'console': {
# #             'class': 'logging.StreamHandler',
# #             'filters': ['required_debug_true'],
# #         },
# #         'file_store': {
# #             'class': 'logging.handlers.RotatingFileHandler',
# #             'filename': os.path.join(BASE_DIR, 'logs', 'store.log'),
# #             'formatter': 'simple'
# #         },
# #         'file_users': {
# #             'class': 'logging.handlers.RotatingFileHandler',
# #             'filename': os.path.join(BASE_DIR, 'logs', 'users.log'),
# #         },
# #         'main_admins': {
# #             'level': 'INFO',
# #             '': ''
# #         }
# #     },
# #     # Loggers
# #     'root': {
# #         'handlers': ['console'],
# #         'level': 'INFO',
# #     },
# #     'loggers': {
# #         'store': {
# #             'handlers': ['file_store', 'console', 'main_admins'],
# #             'level': 'INFO',
# #         },
# #         'users': {
# #             'handlers': ['file_users'],
# #             'level': 'INFO',
# #         },
# #     }
# # }
#
# ADMINS = [
#     ('POURYA', 'test@test.vom')
# ]
#
#
# EMAIL_HOST = 'localhost'
# EMAIL_PORT = '1025'

"""
Django settings for djangol1 project.
Generated by 'django-admin startproject' using Django 3.2.
For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/
For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-or2o0*y-#ic%ypp*t!7$))ysngm+r!+i$!y&l-*i56nd=%w49h'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'widget_tweaks',
    'blog',
    'users',
    'inventory',
    'store',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'djangol1.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'blog.context_processors.shared_context'
            ],
        },
    },
]

WSGI_APPLICATION = 'djangol1.wsgi.application'

# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'maktab_blog',
        'USER': 'usr_blog',
        'PASSWORD': '123456',
        'HOST': 'localhost',
        'PORT': '5432',
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR / 'static'

MEDIA_URL = '/uploads/'
MEDIA_ROOT = BASE_DIR / 'uploads'

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# My Login url
LOGIN_URL = 'users:login'